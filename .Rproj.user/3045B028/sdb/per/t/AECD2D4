{
    "collab_server" : "",
    "contents" : "\n# install.packages(\"readxl\")\nlibrary(ggplot2)\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(rsconnect)\nlibrary(lpSolve)\n\noptions(shiny.maxRequestSize=30*1024^2) \n\nui <- dashboardPage(\ndashboardHeader(),\ndashboardSidebar( \n\n  tabsetPanel(id = 'first_ch',\n              \n              \n  tabPanel(\"Search Engine\", \n           selectInput(inputId = \"League\",label=\"Select the league\",\n                       choices= c(\"Any\", \"Premier League\",\"La Liga\",\"Bundesliga\",\"Seria A\")),\n           selectizeInput(\"Club\", \"Select the club\",choices=c(\"Any\")),\n           sliderInput(\"Age\", label = \"Choose the range of age\", min = 16, \n                       max = 42, value = c(16, 42)),\n           selectInput(inputId = \"Position\",label=\"Select the Position of the player\",\n                       choices= c(\"Any\",\"GK\",\"Defender\",\"Midfielder\",\"Forward\"))\n          \n           \n           \n  ),\n  tabPanel(\"Squad Builder\",\n           textInput(\"money\", label = \"How much is your budget? (Mill. â‚¬)\"),\n           sliderInput(\"gk\", label = \"Choose number of goalkeepers you want to buy\", min = 0, \n                       max = 2, value = 0),\n           sliderInput(\"def\", label = \"Choose number of defenders you want to buy\", min = 0, \n                       max = 5, value = 0),\n           sliderInput(\"mid\", label = \"Choose number of midfielders you want to buy\", min = 0, \n                       max = 5, value = 0),\n           sliderInput(\"fw\", label = paste0(\"Choose number of\",\"forwards\", \"you want to buy\"), min = 0, \n                       max = 4, value = 0),\n\n          \n           actionButton(\n             inputId = \"submit_loc\",\n             label = \"Submit\"\n           )))\n  \n  \n  # br(),\n  # br(),\n  # downloadButton(\"downloadData\", \"Download\",class=\"butt1\")\n  ),\n\ndashboardBody(\n  \n  h3(textOutput(\"text\")),\n  br(),\n  br(),\n  dataTableOutput(\"table\")\n))\n    \n server <- shinyServer(function(input, output,session) {\n      lpsolver <- function(df,num, cap){\n        p <- df$Rating\n        w <- df$Price\n        exact.num.elt <- num\n        cap <- cap\n        mod <- lp(direction = \"max\",\n                  objective.in = p,\n                  const.mat = rbind(w, rep(1, length(p))),\n                  const.dir = c(\"<=\", \"=\"),\n                  const.rhs = c(cap, exact.num.elt),\n                  all.bin = TRUE)\n        # Solution\n        df <- df[which(mod$solution >= 0.999),]\n      }\n      \n      choice <- reactive({\n\n        df  <- readxl::read_xlsx(\"final_data3.xlsx\", col_names = TRUE) #Reading the file\n        if (input$League != \"Any\"){\n        df <-  df[df$League == input$League,]\n        }\n        choices <- c(\"Any\",sort(unique(df$Clubs)))\n        return (choices)\n      })\n      \n      observe({\n        updateSelectizeInput(session,\"Club\", choices=choice())\n      })\n      \n      agg_data <- reactive({\n        keep_cols <- c(\"Players\",\"Clubs\",\"Mins\", \"Age\",\"Values\",\"Rating\",\"Position\")\n        df  <- readxl::read_xlsx(\"final_data3.xlsx\", col_names = TRUE) #Reading the file\n        if (input$League != \"Any\"){\n          \n          df <- df[df$League == input$League,]\n        }\n        \n        if (input$Club != \"Any\"){\n         \n          df <- df[df$Clubs == input$Club,]\n        }\n        # print(input$Age)\n        ages = input$Age\n        # print(ages)\n        # print(ages[1])\n        df <- df[(df$Age >= ages[1]) & (df$Age <= ages[2]),]\n        choices= c(\"Any\",\"GK\",\"Defender\",\"Midfielder\",\"Forward\")\n        real_choices = c(\"Any\",\"GK\",\"D\",\"M\",\"FW\")\n        ind = match(input$Position, choices)\n        real_position = real_choices[ind]\n        if (real_position != \"Any\"){\n        df <- df[grepl(real_position,df$Position1),]\n        }\n        return (df[keep_cols])\n      })\n      \nsquad_builder <- reactive({\n  keep_cols <- c(\"Players\",\"Clubs\",\"Mins\", \"Age\",\"Values\",\"Rating\",\"Position\",\"Price\")\n  final  <- readxl::read_xlsx(\"final_data3.xlsx\", col_names = TRUE) #Reading the file\n  final <- final[order(-final$Rating),]\n  GK <- mean(final[grepl(\"GK\",final$Position1),]$Price)/10**6\n  defenders <- mean(final[grepl(\"D\",final$Position1),]$Price)/10**6\n  midfields <- mean(final[grepl(\"M\",final$Position1),]$Price)/10**6\n  forwards <- mean(final[grepl(\"FW\",final$Position1),]$Price)/10**6\n  num_GK = input$gk\n  num_DEF = input$def\n  num_MID = input$mid\n  num_FW = input$fw\n  total = as.numeric(input$money)*10**6\n  GK_val <- total * GK * num_GK/(GK * num_GK + defenders*num_DEF + midfields*num_MID + forwards*num_FW)\n  DEF_val <- total * defenders * num_DEF/(GK * num_GK + defenders*num_DEF + midfields*num_MID + forwards*num_FW)\n  MID_val <- total * midfields * num_MID/(GK * num_GK + defenders*num_DEF + midfields*num_MID + forwards*num_FW)\n  FW_val <- total * forwards * num_FW/(GK * num_GK + defenders*num_DEF + midfields*num_MID + forwards*num_FW)\n  final_gk <- final[(final$Price <= GK_val) & grepl(\"GK\",final$Position1) ,]\n  final_def <- final[(final$Price <= DEF_val) & grepl(\"D\",final$Position1),]\n  final_mid <- final[(final$Price <= MID_val) & grepl(\"M\",final$Position1),]\n  final_fw <- final[(final$Price <= FW_val) & grepl(\"FW\",final$Position1),]\n  # paste(length(final_gk),length(final_def),length(final_mid), length(final_fw))\n  common_mid_fw <- intersect(final_mid$Players,final_fw$Players)\n  common_mid_def <- intersect(final_mid$Players,final_def$Players)\n  common_fw_def <- intersect(final_def$Players,final_fw$Players)\n  final_mid <- final_mid[!(final_mid$Players %in% c(common_mid_fw,common_mid_def)), ]\n  final_def <- final_def[!(final_def$Players %in% common_fw_def),]\n  final_gk <- lpsolver(final_gk, num_GK, GK_val)\n  final_def <- lpsolver(final_def, num_DEF, DEF_val)\n  final_mid <- lpsolver(final_mid, num_MID, MID_val)\n  final_fw <- lpsolver(final_fw, num_FW, FW_val)\n  \n  \n  \n  final_dt <- rbind(final_gk,final_def, final_mid,final_fw)\n  \n  \n  \n  return (final_dt[keep_cols])\n  \n  \n  \n})\n\nobserveEvent(input$first_ch,\nif (input$first_ch == \"Search Engine\"){\n  \n  output$table <- renderDataTable({\n    agg_data()\n    \n  })\n  }\n)\nobserveEvent(\n  eventExpr = input[[\"submit_loc\"]],\n  handlerExpr = { \n    output$text <- renderText({\n      if(input$money != \"\"){\n      df <- squad_builder()\n      saving <- as.numeric(input$money)*10**6 - sum(df[\"Price\"])\n      paste(\"Total savings are:\",saving/10**6, \"Mill. Euro\")\n      }\n    })\n    output$table <- renderDataTable({\n      if(input$money != \"\"){\n      squad_builder()[-8]\n      }\n    })\n    \n  }\n  )\n})\n\nshinyApp(ui, server)\n\n",
    "created" : 1544868323672.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1422586922",
    "id" : "AECD2D4",
    "lastKnownWriteTime" : 1544383635,
    "last_content_update" : 1544383635,
    "path" : "~/Desktop/Sports Analytcs/Sports_Project/final_shiny.R",
    "project_path" : "final_shiny.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}